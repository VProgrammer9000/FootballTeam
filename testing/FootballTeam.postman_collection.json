{
	"info": {
		"_postman_id": "a95eb68a-1a31-4893-a64f-5c2eb8f3e001",
		"name": "FootballTeam",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Get Services (Milestone 1)",
			"item": [
				{
					"name": "1. list",
					"item": [
						{
							"name": "1. without sort",
							"item": [
								{
									"name": "1.1.1.1 read list of games",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/game/list",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"game",
												"list"
											]
										},
										"description": "This Service reads all games."
									},
									"response": []
								},
								{
									"name": "1.1.1.2 read list of teams",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/list",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"team",
												"list"
											]
										},
										"description": "This Service reads all teams."
									},
									"response": []
								},
								{
									"name": "1.1.1.3 read list of players",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/list",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"player",
												"list"
											]
										},
										"description": "This Service reads all players."
									},
									"response": []
								}
							]
						},
						{
							"name": "2. correct sort",
							"item": [
								{
									"name": "1. Games attributes",
									"item": [
										{
											"name": "1.1.2.1.1 read list of games sorted by date",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/FootballTeam-1.0/resource/game/list?sort=date",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"FootballTeam-1.0",
														"resource",
														"game",
														"list"
													],
													"query": [
														{
															"key": "sort",
															"value": "date"
														}
													]
												},
												"description": "This Service reads all Games sorted by date."
											},
											"response": []
										}
									],
									"description": "Games sorted by game-attributes  "
								},
								{
									"name": "2. Teams attributes",
									"item": [
										{
											"name": "1.1.2.2.1 read list of teams sorted by name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/list?sort=name",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"FootballTeam-1.0",
														"resource",
														"team",
														"list"
													],
													"query": [
														{
															"key": "sort",
															"value": "name"
														}
													]
												},
												"description": "This Service reads all teams sorted by name."
											},
											"response": []
										},
										{
											"name": "1.1.2.2.2 read list of teams sorted by amountWins",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/list?sort=amountWins",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"FootballTeam-1.0",
														"resource",
														"team",
														"list"
													],
													"query": [
														{
															"key": "sort",
															"value": "amountWins"
														}
													]
												},
												"description": "This Service reads all teams sorted by the amount they have won."
											},
											"response": []
										},
										{
											"name": "1.1.2.2.3 read list of teams sorted by amountLost",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/list?sort=amountLost",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"FootballTeam-1.0",
														"resource",
														"team",
														"list"
													],
													"query": [
														{
															"key": "sort",
															"value": "amountLost"
														}
													]
												},
												"description": "This Service reads all teams sorted by the amount they have lost."
											},
											"response": []
										}
									],
									"description": "Teams sorted by team-attributes  ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "3. Players attributes",
									"item": [
										{
											"name": "1.1.2.3.1 read list of player sorted by name",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/list?sort=name",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"FootballTeam-1.0",
														"resource",
														"player",
														"list"
													],
													"query": [
														{
															"key": "sort",
															"value": "name"
														}
													]
												},
												"description": "This Service reads all player sorted by name."
											},
											"response": []
										},
										{
											"name": "1.1.2.3.2 read list of player sorted by prename",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/list?sort=prename",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"FootballTeam-1.0",
														"resource",
														"player",
														"list"
													],
													"query": [
														{
															"key": "sort",
															"value": "prename"
														}
													]
												},
												"description": "This Service reads all player sorted by prename."
											},
											"response": []
										},
										{
											"name": "1.1.2.3.3 read list of player sorted by number",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/list?sort=number",
													"protocol": "http",
													"host": [
														"localhost"
													],
													"port": "8080",
													"path": [
														"FootballTeam-1.0",
														"resource",
														"player",
														"list"
													],
													"query": [
														{
															"key": "sort",
															"value": "number"
														}
													]
												},
												"description": "This Service reads all player sorted by number."
											},
											"response": []
										}
									],
									"description": "Players sorted by player-attributes  ",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									]
								}
							]
						},
						{
							"name": "3. wrong sort",
							"item": [
								{
									"name": "1.1.3.1 read list of game invalid sort value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/game/list?sort=invalid",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"game",
												"list"
											],
											"query": [
												{
													"key": "sort",
													"value": "invalid"
												}
											]
										},
										"description": "This Service reads all game sorted with an invalid sort value.\nExpected: 400 Error message"
									},
									"response": []
								},
								{
									"name": "1.1.3.2 read list of team invalid sort value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/list?sort=invalid",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"team",
												"list"
											],
											"query": [
												{
													"key": "sort",
													"value": "invalid"
												}
											]
										},
										"description": "This Service reads all teams sorted with an invalid sort value.\nExpected: 400 Error message"
									},
									"response": []
								},
								{
									"name": "1.1.3.3 read list of player invalid sort value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/list?sort=invalid",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"player",
												"list"
											],
											"query": [
												{
													"key": "sort",
													"value": "invalid"
												}
											]
										},
										"description": "This Service reads all player sorted with an invalid sort value.\nExpected: 400 Error message"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"description": "all list Tests"
				},
				{
					"name": "2. read",
					"item": [
						{
							"name": "1. correct Input",
							"item": [
								{
									"name": "1.2.1.1 read a game",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/game/read?uuid=d1afb8d8-d9bb-11ec-9d64-0242ac120002",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"game",
												"read"
											],
											"query": [
												{
													"key": "uuid",
													"value": "d1afb8d8-d9bb-11ec-9d64-0242ac120002"
												}
											]
										},
										"description": "This Service reads one Game by the UUID."
									},
									"response": []
								},
								{
									"name": "1.2.1.2 read a team",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/read?uuid=907271a8-d9bb-11ec-9d64-0242ac120002",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"team",
												"read"
											],
											"query": [
												{
													"key": "uuid",
													"value": "907271a8-d9bb-11ec-9d64-0242ac120002"
												}
											]
										},
										"description": "This Service reads one Team by the UUID."
									},
									"response": []
								},
								{
									"name": "1.2.1.3 read a player",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/read?uuid=f8c4857a-d9bb-11ec-9d64-0242ac120002",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"player",
												"read"
											],
											"query": [
												{
													"key": "uuid",
													"value": "f8c4857a-d9bb-11ec-9d64-0242ac120002"
												}
											]
										},
										"description": "This Service reads one Player by the UUID."
									},
									"response": []
								}
							],
							"description": "The Input (uuid) is correct."
						},
						{
							"name": "2. No Input",
							"item": [
								{
									"name": "1.2.2.1 read game no UUID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/game/read",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"game",
												"read"
											]
										},
										"description": "This Service reads Player without UUID."
									},
									"response": []
								},
								{
									"name": "1.2.2.2 read team no UUID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/read",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"team",
												"read"
											]
										},
										"description": "This Service reads Player without UUID."
									},
									"response": []
								},
								{
									"name": "1.2.2.3 read player no UUID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/read",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"player",
												"read"
											]
										},
										"description": "This Service reads Player without UUID."
									},
									"response": []
								}
							]
						},
						{
							"name": "3. Wrong Input",
							"item": [
								{
									"name": "1.2.3.1 read game wrong UUID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/game/read?uuid=123",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"game",
												"read"
											],
											"query": [
												{
													"key": "uuid",
													"value": "123"
												}
											]
										},
										"description": "This Service reads game with a wrong UUID."
									},
									"response": []
								},
								{
									"name": "1.2.3.2 read team wrong UUID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/team/read?uuid=123",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"team",
												"read"
											],
											"query": [
												{
													"key": "uuid",
													"value": "123"
												}
											]
										},
										"description": "This Service reads team with a wrong UUID."
									},
									"response": []
								},
								{
									"name": "1.2.3.3 read player wrong UUID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"response is as expected\", function () {",
													"pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/FootballTeam-1.0/resource/player/read?uuid=123",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"FootballTeam-1.0",
												"resource",
												"player",
												"read"
											],
											"query": [
												{
													"key": "uuid",
													"value": "123"
												}
											]
										},
										"description": "This Service reads player with a wrong UUID."
									},
									"response": []
								}
							]
						}
					],
					"description": "All reads  test"
				}
			],
			"description": "All get Services (Milestone 1)"
		},
		{
			"name": "0.1 Testservice",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		}
	]
}